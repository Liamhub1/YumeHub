local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v42=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v42,v42 + 1 )),v1(v2(v25,1 + (v42% #v25) ,1 + (v42% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=0;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;while true do if (v29==0) then v30=1;v31=nil;v27=v12(v11(v27,5),v7("\130\120","\37\172\86\75\236\80\204\201"),function(v43) if (v9(v43,2)==79) then v31=v8(v11(v43,1,1));return "";else local v102=0;local v103;while true do if (0==v102) then v103=v10(v8(v43,49 -33 ));if v31 then local v123=0;local v124;while true do if (v123==0) then v124=v13(v103,v31);v31=nil;v123=1;end if (1==v123) then return v124;end end else return v103;end break;end end end end);v29=1;end if (v29==6) then v40=nil;function v40() local v44={};local v45={};local v46={};local v47={v44,v45,nil,v46};local v48=v35();local v49={};for v79=1,v48 do local v80=v33();local v81;if (v80==1) then v81=v33()~=0 ;elseif (v80==2) then v81=v36();elseif (v80==3) then v81=v37();end v49[v79]=v81;end v47[3]=v33();for v83=1 + 0 ,v35() do local v84=0;local v85;while true do if (v84==0) then v85=v33();if (v32(v85,1,1)==0) then local v119=0;local v120;local v121;local v122;while true do if (v119==2) then if (v32(v121,1,1)==1) then v122[2]=v49[v122[2]];end if (v32(v121,2,2)==1) then v122[3]=v49[v122[3]];end v119=3;end if (v119==1) then v122={v34(),v34(),nil,nil};if (v120==0) then local v130=0;while true do if (v130==0) then v122[3]=v34();v122[4]=v34();break;end end elseif (v120==1) then v122[3]=v35();elseif (v120==2) then v122[3]=v35() -(2^16) ;elseif (v120==3) then local v137=0;while true do if (v137==0) then v122[3]=v35() -(2^16) ;v122[4]=v34();break;end end end v119=2;end if (0==v119) then v120=v32(v85,2,3);v121=v32(v85,4,6);v119=1;end if (v119==3) then if (v32(v121,3,3)==(1 + 0)) then v122[4]=v49[v122[4]];end v44[v83]=v122;break;end end end break;end end end for v86=1,v35() do v45[v86-1 ]=v40();end return v47;end v41=nil;v29=7;end if (v29==4) then function v36() local v51=v35();local v52=v35();local v53=1;local v54=(v32(v52,1,20) * (2^32)) + v51 ;local v55=v32(v52,952 -(857 + 74) ,31);local v56=((v32(v52,32)==1) and  -1) or 1 ;if (v55==0) then if (v54==0) then return v56 * 0 ;else local v109=0;while true do if (v109==0) then v55=569 -(367 + 201) ;v53=0;break;end end end elseif (v55==2047) then return ((v54==(927 -(214 + 713))) and (v56 * (1/0))) or (v56 * NaN) ;end return v16(v56,v55-1023 ) * (v53 + (v54/(2^52))) ;end v37=nil;function v37(v57) local v58=0;local v59;local v60;while true do if (v58==2) then v60={};for v110=1, #v59 do v60[v110]=v10(v9(v11(v59,v110,v110)));end v58=3;end if (3==v58) then return v14(v60);end if (v58==0) then v59=nil;if  not v57 then local v116=0;while true do if (v116==0) then v57=v35();if (v57==0) then return "";end break;end end end v58=1;end if (1==v58) then v59=v11(v27,v30,(v30 + v57) -1 );v30=v30 + v57 ;v58=2;end end end v29=5;end if (v29==7) then function v41(v61,v62,v63) local v64=v61[1];local v65=v61[879 -(282 + 595) ];local v66=v61[3];return function(...) local v88=v64;local v89=v65;local v90=v66;local v91=v39;local v92=1;local v93= -1;local v94={};local v95={...};local v96=v20("#",...) -1 ;local v97={};local v98={};for v104=0,v96 do if (v104>=v90) then v94[v104-v90 ]=v95[v104 + 1 ];else v98[v104]=v95[v104 + 1 ];end end local v99=(v96-v90) + 1 ;local v100;local v101;while true do local v105=0;while true do if (0==v105) then v100=v88[v92];v101=v100[1];v105=1;end if (v105==1) then if (v101<=41) then if (v101<=20) then if (v101<=9) then if (v101<=4) then if (v101<=1) then if (v101==0) then if (v98[v100[2]]~=v100[4]) then v92=v92 + (1638 -(1523 + 114)) ;else v92=v100[3 + 0 ];end elseif ((v100[3]==v7("\180\87\111\65","\143\235\18\33\23\229\158\19")) or (v100[3]==v7("\189\196\207\230\225\127\106","\48\218\161\187\128\132\17\28"))) then v98[v100[2]]=v63;else v98[v100[2]]=v63[v100[3]];end elseif (v101<=2) then if (v98[v100[2]]==v100[4]) then v92=v92 + 1 ;else v92=v100[3];end elseif (v101==(3 -0)) then v98[v100[2]]= #v98[v100[3]];else v98[v100[2]][v100[3]]=v98[v100[4]];end elseif (v101<=6) then if (v101==5) then local v138=v100[2];v98[v138](v21(v98,v138 + 1 ,v100[3]));else local v139=0;local v140;local v141;while true do if (v139==0) then v140=v100[2];v141=v98[v100[3]];v139=1;end if (v139==1) then v98[v140 + 1 ]=v141;v98[v140]=v141[v100[4]];break;end end end elseif (v101<=7) then v92=v100[3];elseif (v101==8) then v98[v100[2]]=v98[v100[3]]%v98[v100[1069 -(68 + 997) ]] ;elseif  not v98[v100[2]] then v92=v92 + 1 ;else v92=v100[3];end elseif (v101<=(1284 -(226 + 1044))) then if (v101<=11) then if (v101>(43 -33)) then v98[v100[119 -(32 + 85) ]]=v100[3] + v98[v100[4]] ;else do return;end end elseif (v101<=12) then v98[v100[2]]();elseif (v101==13) then v98[v100[2]]();else v98[v100[2]]=v98[v100[3]][v100[4]];end elseif (v101<=17) then if (v101<=15) then local v144=v100[2];local v145=v98[v100[3]];v98[v144 + 1 ]=v145;v98[v144]=v145[v100[4]];elseif (v101>16) then local v228=v100[2 + 0 ];v98[v228]=v98[v228](v21(v98,v228 + 1 ,v93));else v98[v100[2]]=v98[v100[3]]%v98[v100[1 + 3 ]] ;end elseif (v101<=18) then local v149=0;local v150;local v151;local v152;local v153;while true do if (v149==0) then v150=v100[959 -(892 + 65) ];v151,v152=v91(v98[v150](v21(v98,v150 + 1 ,v100[3])));v149=1;end if (v149==1) then v93=(v152 + v150) -1 ;v153=0;v149=2;end if (v149==2) then for v344=v150,v93 do local v345=0;while true do if (v345==0) then v153=v153 + 1 ;v98[v344]=v151[v153];break;end end end break;end end elseif (v101==(44 -25)) then local v231=0;local v232;local v233;local v234;while true do if (v231==0) then v232=v100[3 -1 ];v233=v98[v232];v231=1;end if (v231==1) then v234=v98[v232 + 2 ];if (v234>0) then if (v233>v98[v232 + 1 ]) then v92=v100[3];else v98[v232 + 3 ]=v233;end elseif (v233<v98[v232 + (1 -0) ]) then v92=v100[3];else v98[v232 + (353 -(87 + 263)) ]=v233;end break;end end else v98[v100[182 -(67 + 113) ]]=v100[3 + 0 ] + v98[v100[4]] ;end elseif (v101<=30) then if (v101<=25) then if (v101<=22) then if (v101>21) then v92=v100[3];else local v155=v100[4 -2 ];local v156=v98[v155 + 2 ];local v157=v98[v155] + v156 ;v98[v155]=v157;if (v156>0) then if (v157<=v98[v155 + 1 ]) then local v346=0;while true do if (0==v346) then v92=v100[3];v98[v155 + 3 ]=v157;break;end end end elseif (v157>=v98[v155 + 1 ]) then local v347=0;while true do if (v347==0) then v92=v100[3];v98[v155 + 3 ]=v157;break;end end end end elseif (v101<=23) then local v159=0;local v160;while true do if (v159==0) then v160=v100[2];v98[v160](v21(v98,v160 + 1 ,v93));break;end end elseif (v101==24) then local v236=0;local v237;while true do if (v236==0) then v237=v100[2];v98[v237]=v98[v237](v21(v98,v237 + 1 ,v100[3]));break;end end else v98[v100[2]]=v98[v100[3]] + v100[4] ;end elseif (v101<=27) then if (v101==26) then v98[v100[2]]=v98[v100[3]]%v100[4] ;else v98[v100[2]][v100[3 + 0 ]]=v98[v100[4]];end elseif (v101<=28) then local v164=v100[2];do return v98[v164](v21(v98,v164 + 1 ,v100[3]));end elseif (v101==29) then v98[v100[2]]=v98[v100[3]][v100[4]];else local v241=0;local v242;while true do if (v241==0) then v242=v100[2];v98[v242](v21(v98,v242 + 1 ,v100[3]));break;end end end elseif (v101<=35) then if (v101<=32) then if (v101==31) then local v165=v100[2];local v166={};for v206=1, #v97 do local v207=0;local v208;while true do if (v207==0) then v208=v97[v206];for v367=0 -0 , #v208 do local v368=0;local v369;local v370;local v371;while true do if (v368==0) then v369=v208[v367];v370=v369[1];v368=1;end if (1==v368) then v371=v369[2];if ((v370==v98) and (v371>=v165)) then local v431=0;while true do if (0==v431) then v166[v371]=v370[v371];v369[1]=v166;break;end end end break;end end end break;end end end else v98[v100[2]]=v62[v100[3]];end elseif (v101<=33) then v98[v100[2]]=v100[3];elseif (v101==34) then if  not v98[v100[2]] then v92=v92 + 1 ;else v92=v100[3];end else local v243=0;local v244;local v245;local v246;local v247;while true do if (2==v243) then for v387=v244,v93 do v247=v247 + (2 -1) ;v98[v387]=v245[v247];end break;end if (v243==0) then v244=v100[2];v245,v246=v91(v98[v244](v21(v98,v244 + (953 -(802 + 150)) ,v93)));v243=1;end if (1==v243) then v93=(v246 + v244) -1 ;v247=0;v243=2;end end end elseif (v101<=38) then if (v101<=36) then v98[v100[3 -1 ]]=v100[3]~=0 ;elseif (v101>(27 + 10)) then if (v98[v100[2]]~=v100[4]) then v92=v92 + 1 ;else v92=v100[3];end else v98[v100[2]][v100[3]]=v100[4];end elseif (v101<=39) then v98[v100[2]]=v62[v100[3]];elseif (v101==40) then local v250=v89[v100[3]];local v251;local v252={};v251=v18({},{[v7("\112\58\84\213\75\0\69","\187\47\101\61")]=function(v308,v309) local v310=0;local v311;while true do if (0==v310) then v311=v252[v309];return v311[998 -(915 + 82) ][v311[2]];end end end,[v7("\57\5\176\12\37\15\52\186\12\42","\82\102\90\222\105")]=function(v312,v313,v314) local v315=0;local v316;while true do if (v315==0) then v316=v252[v313];v316[1][v316[2]]=v314;break;end end end});for v317=2 -1 ,v100[4] do v92=v92 + 1 ;local v318=v88[v92];if (v318[1]==76) then v252[v317-1 ]={v98,v318[3]};else v252[v317-1 ]={v62,v318[3]};end v97[ #v97 + 1 ]=v252;end v98[v100[2]]=v41(v250,v251,v63);else local v254=v89[v100[3]];local v255;local v256={};v255=v18({},{[v7("\148\116\206\89\26\185\73","\78\203\43\167\55\126\220\49")]=function(v320,v321) local v322=0;local v323;while true do if (v322==0) then v323=v256[v321];return v323[1][v323[2 + 0 ]];end end end,[v7("\28\33\29\1\208\205\80\174\38\6","\202\67\126\115\100\167\164\62")]=function(v324,v325,v326) local v327=v256[v325];v327[1][v327[2]]=v326;end});for v329=1,v100[4] do local v330=0;local v331;while true do if (v330==0) then v92=v92 + 1 ;v331=v88[v92];v330=1;end if (v330==1) then if (v331[1]==76) then v256[v329-1 ]={v98,v331[3 -0 ]};else v256[v329-1 ]={v62,v331[3]};end v97[ #v97 + 1 ]=v256;break;end end end v98[v100[2]]=v41(v254,v255,v63);end elseif (v101<=62) then if (v101<=51) then if (v101<=46) then if (v101<=43) then if (v101==42) then local v174=v100[2];do return v21(v98,v174,v93);end else local v175=0;local v176;while true do if (v175==0) then v176=v100[2];v98[v176](v98[v176 + 1 ]);break;end end end elseif (v101<=44) then v98[v100[2]]=v98[v100[3]];elseif (v101>45) then do return v98[v100[2]]();end else v98[v100[2]]=v100[3]~=0 ;end elseif (v101<=48) then if (v101==47) then v98[v100[2]]=v100[3];else local v181=v100[2];local v182={};for v209=1, #v97 do local v210=0;local v211;while true do if (v210==0) then v211=v97[v209];for v375=1187 -(1069 + 118) , #v211 do local v376=v211[v375];local v377=v376[1];local v378=v376[2];if ((v377==v98) and (v378>=v181)) then v182[v378]=v377[v378];v376[1]=v182;end end break;end end end end elseif (v101<=49) then local v183=v100[2];local v184,v185=v91(v98[v183](v98[v183 + 1 ]));v93=(v185 + v183) -(2 -1) ;local v186=0;for v212=v183,v93 do local v213=0;while true do if (0==v213) then v186=v186 + 1 ;v98[v212]=v184[v186];break;end end end elseif (v101>50) then v98[v100[3 -1 ]]=v98[v100[3]]%v100[4] ;else local v260=0;local v261;local v262;local v263;local v264;while true do if (v260==2) then for v396=v261,v93 do v264=v264 + 1 + 0 ;v98[v396]=v262[v264];end break;end if (v260==0) then v261=v100[2];v262,v263=v91(v98[v261](v21(v98,v261 + 1 ,v93)));v260=1;end if (v260==1) then v93=(v263 + v261) -1 ;v264=0;v260=2;end end end elseif (v101<=(99 -43)) then if (v101<=53) then if (v101==52) then if v98[v100[2]] then v92=v92 + 1 ;else v92=v100[3];end else v98[v100[2 + 0 ]]={};end elseif (v101<=54) then v98[v100[2]]={};elseif (v101==(846 -(368 + 423))) then do return v98[v100[2]]();end else local v266=0;local v267;while true do if (v266==0) then v267=v100[2];v98[v267]=v98[v267](v21(v98,v267 + 1 ,v100[3]));break;end end end elseif (v101<=59) then if (v101<=57) then if (v98[v100[6 -4 ]]==v100[4]) then v92=v92 + (19 -(10 + 8)) ;else v92=v100[3];end elseif (v101>58) then local v269=v100[2];local v270=v98[v269];for v333=v269 + 1 ,v93 do v15(v270,v98[v333]);end else v98[v100[2]][v100[3]]=v100[4];end elseif (v101<=60) then local v189=0;local v190;while true do if (v189==0) then v190=v100[2];do return v98[v190](v21(v98,v190 + 1 ,v100[3]));end break;end end elseif (v101==61) then local v273=v100[2];local v274=v98[v273 + 2 ];local v275=v98[v273] + v274 ;v98[v273]=v275;if (v274>0) then if (v275<=v98[v273 + 1 ]) then local v399=0;while true do if (0==v399) then v92=v100[3];v98[v273 + 3 ]=v275;break;end end end elseif (v275>=v98[v273 + 1 ]) then v92=v100[3];v98[v273 + 3 ]=v275;end else local v277=0;local v278;while true do if (v277==0) then v278=v100[2];v98[v278]=v98[v278](v98[v278 + 1 ]);break;end end end elseif (v101<=72) then if (v101<=67) then if (v101<=64) then if (v101>63) then do return;end else local v191=0;local v192;while true do if (v191==0) then v192=v100[2];v98[v192](v98[v192 + 1 ]);break;end end end elseif (v101<=(249 -184)) then for v214=v100[444 -(416 + 26) ],v100[3] do v98[v214]=nil;end elseif (v101==66) then if ((v100[3]==v7("\224\12\174\96","\59\191\73\224\54")) or (v100[3]==v7("\224\7\238\207\226\12\236","\169\135\98\154"))) then v98[v100[2]]=v63;else v98[v100[6 -4 ]]=v63[v100[2 + 1 ]];end else local v279=0;local v280;local v281;local v282;local v283;while true do if (0==v279) then v280=v100[2];v281,v282=v91(v98[v280](v21(v98,v280 + 1 ,v100[3])));v279=1;end if (v279==1) then v93=(v282 + v280) -1 ;v283=0;v279=2;end if (v279==2) then for v402=v280,v93 do v283=v283 + 1 ;v98[v402]=v281[v283];end break;end end end elseif (v101<=69) then if (v101>68) then v98[v100[2]]= #v98[v100[3]];else local v194=v100[2];local v195=v98[v194];for v216=v194 + 1 ,v93 do v15(v195,v98[v216]);end end elseif (v101<=70) then if (v100[3 -1 ]==v98[v100[442 -(145 + 293) ]]) then v92=v92 + (431 -(44 + 386)) ;else v92=v100[3];end elseif (v101>71) then local v285=v100[3];local v286=v98[v285];for v336=v285 + 1 ,v100[4] do v286=v286   .. v98[v336] ;end v98[v100[2]]=v286;else for v337=v100[1488 -(998 + 488) ],v100[1 + 2 ] do v98[v337]=nil;end end elseif (v101<=77) then if (v101<=74) then if (v101>73) then local v196=v100[2];do return v21(v98,v196,v93);end else v98[v100[2 + 0 ]]=v98[v100[3]] + v100[4] ;end elseif (v101<=75) then local v198=0;local v199;local v200;while true do if (v198==1) then for v357=v199 + 1 ,v100[4] do v200=v200   .. v98[v357] ;end v98[v100[2]]=v200;break;end if (v198==0) then v199=v100[775 -(201 + 571) ];v200=v98[v199];v198=1;end end elseif (v101>76) then local v288=0;local v289;while true do if (v288==0) then v289=v100[2];v98[v289]=v98[v289](v98[v289 + 1 ]);break;end end else v98[v100[2]]=v98[v100[3]];end elseif (v101<=(1218 -(116 + 1022))) then if (v101<=78) then local v201=0;local v202;local v203;local v204;local v205;while true do if (1==v201) then v93=(v204 + v202) -1 ;v205=0;v201=2;end if (v201==0) then v202=v100[2];v203,v204=v91(v98[v202](v98[v202 + 1 ]));v201=1;end if (2==v201) then for v358=v202,v93 do local v359=0;while true do if (v359==0) then v205=v205 + 1 ;v98[v358]=v203[v205];break;end end end break;end end elseif (v101>79) then local v292=v100[2];v98[v292]=v98[v292](v21(v98,v292 + 1 ,v93));else local v294=v100[2];v98[v294](v21(v98,v294 + 1 ,v93));end elseif (v101<=81) then if v98[v100[2]] then v92=v92 + 1 ;else v92=v100[12 -9 ];end elseif (v101>82) then local v296=v100[2];local v297=v98[v296];local v298=v98[v296 + 2 ];if (v298>0) then if (v297>v98[v296 + 1 ]) then v92=v100[3];else v98[v296 + 2 + 1 ]=v297;end elseif (v297<v98[v296 + 1 ]) then v92=v100[3];else v98[v296 + 3 ]=v297;end elseif (v100[2]==v98[v100[4]]) then v92=v92 + 1 ;else v92=v100[3];end v92=v92 + (3 -2) ;break;end end end end;end return v41(v40(),{},v28)(...);end if (v29==1) then v32=nil;function v32(v67,v68,v69) if v69 then local v106=0;local v107;while true do if (0==v106) then v107=(v67/(2^(v68-1)))%(2^(((v69-(2 -1)) -(v68-1)) + 1)) ;return v107-(v107%(1 -0)) ;end end else local v108=2^(v68-1) ;return (((v67%(v108 + v108))>=v108) and 1) or (0 -0) ;end end v33=nil;v29=2;end if (v29==5) then v38=v35;v39=nil;function v39(...) return {...},v20("#",...);end v29=6;end if (v29==3) then v35=nil;function v35() local v70=0;local v71;local v72;local v73;local v74;while true do if (v70==0) then v71,v72,v73,v74=v9(v27,v30,v30 + 3 );v30=v30 + 4 ;v70=1;end if (v70==1) then return (v74 * 16777216) + (v73 * 65536) + (v72 * 256) + v71 ;end end end v36=nil;v29=4;end if (v29==2) then function v33() local v75=v9(v27,v30,v30);v30=v30 + (620 -(555 + 64)) ;return v75;end v34=nil;function v34() local v76=0;local v77;local v78;while true do if (v76==0) then v77,v78=v9(v27,v30,v30 + 2 );v30=v30 + 2 ;v76=1;end if (v76==1) then return (v78 * 256) + v77 ;end end end v29=3;end end end vv17(),...);
