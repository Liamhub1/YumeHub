local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v42=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v42,v42 + 1 )),v1(v2(v25,1 + (v42% #v25) ,1 + (v42% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=0;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;while true do if (v29==3) then function v36()local v43=0;local v44;local v45;local v46;local v47;local v48;local v49;while true do if (v43==0) then v44=v35();v45=v35();v43=1;end if (v43==1) then v46=1;v47=(v32(v45,932 -(857 + 74) ,20) * (2^32)) + v44 ;v43=2;end if (v43==2) then v48=v32(v45,21,31);v49=((v32(v45,32)==(569 -(367 + 201))) and  -1) or 1 ;v43=3;end if (3==v43) then if (v48==0) then if (v47==(927 -(214 + 713))) then return v49 * 0 ;else local v121=0;while true do if (v121==0) then v48=1;v46=0;break;end end end elseif (v48==2047) then return ((v47==0) and (v49 * ((1 + 0)/0))) or (v49 * NaN) ;end return v16(v49,v48-1023 ) * (v46 + (v47/(2^52))) ;end end end v37=nil;function v37(v50)local v51;if  not v50 then local v94=0;while true do if (v94==0) then v50=v35();if (v50==0) then return "";end break;end end end v51=v11(v27,v30,(v30 + v50) -1 );v30=v30 + v50 ;local v52={};for v78=1, #v51 do v52[v78]=v10(v9(v11(v51,v78,v78)));end return v14(v52);end v38=v35;v29=4;end if (v29==1) then function v32(v53,v54,v55)if v55 then local v95=0;local v96;while true do if (0==v95) then v96=(v53/(2^(v54-1)))%(2^(((v55-1) -(v54-1)) + 1)) ;return v96-(v96%(2 -1)) ;end end else local v97=2^(v54-1) ;return (((v53%(v97 + v97))>=v97) and 1) or (0 -0) ;end end v33=nil;function v33()local v56=v9(v27,v30,v30);v30=v30 + 1 ;return v56;end v34=nil;v29=2;end if (2==v29) then function v34()local v57,v58=v9(v27,v30,v30 + 2 );v30=v30 + (4 -2) ;return (v58 * 256) + v57 ;end v35=nil;function v35()local v59=0;local v60;local v61;local v62;local v63;while true do if (v59==0) then v60,v61,v62,v63=v9(v27,v30,v30 + 3 );v30=v30 + 4 ;v59=1;end if (v59==1) then return (v63 * 16777216) + (v62 * (66155 -(555 + 64))) + (v61 * 256) + v60 ;end end end v36=nil;v29=3;end if (v29==0) then v30=1;v31=nil;v27=v12(v11(v27,5),v7("\22\140","\185\56\162\225\118\158"),function(v64)if (v9(v64,2)==(246 -167)) then v31=v8(v11(v64,1,1));return "";else local v98=0;local v99;while true do if (v98==0) then v99=v10(v8(v64,16));if v31 then local v122=0;local v123;while true do if (v122==0) then v123=v13(v99,v31);v31=nil;v122=1;end if (1==v122) then return v123;end end else return v99;end break;end end end end);v32=nil;v29=1;end if (v29==5) then v41=nil;function v41(v65,v66,v67)local v68=v65[1];local v69=v65[2];local v70=v65[3];return function(...)local v80=v68;local v81=v69;local v82=v70;local v83=v39;local v84=1;local v85= -1;local v86={};local v87={...};local v88=v20("#",...) -1 ;local v89={};local v90={};for v100=0,v88 do if (v100>=v82) then v86[v100-v82 ]=v87[v100 + 1 ];else v90[v100]=v87[v100 + 1 ];end end local v91=(v88-v82) + (118 -(32 + 85)) ;local v92;local v93;while true do local v101=0;while true do if (v101==0) then v92=v80[v84];v93=v92[1 + 0 ];v101=1;end if (v101==1) then if (v93<=52) then if (v93<=25) then if (v93<=12) then if (v93<=5) then if (v93<=2) then if (v93<=0) then v90[v92[1 + 1 ]]=v92[960 -(892 + 65) ] + v90[v92[4]] ;elseif (v93>1) then v90[v92[2]][v92[3]]=v92[4];else do return v90[v92[2]];end end elseif (v93<=3) then v90[v92[2]]=v92[7 -4 ];elseif (v93>4) then local v174=0;local v175;while true do if (v174==0) then v175=v92[2];do return v21(v90,v175,v85);end break;end end else v90[v92[3 -1 ]]=v90[v92[3]]%v90[v92[4]] ;end elseif (v93<=8) then if (v93<=(10 -4)) then v90[v92[352 -(87 + 263) ]]();elseif (v93==7) then v90[v92[2]]=v90[v92[3]];elseif (v92[2]==v90[v92[184 -(67 + 113) ]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=10) then if (v93>9) then v84=v92[3];else do return;end end elseif (v93>11) then local v180=0;local v181;while true do if (v180==0) then v181=v92[2];v90[v181](v21(v90,v181 + 1 ,v92[3]));break;end end else v90[v92[2]]= #v90[v92[3]];end elseif (v93<=18) then if (v93<=15) then if (v93<=13) then v90[v92[2]]=v90[v92[3]][v92[3 + 1 ]];elseif (v93==14) then local v183=0;local v184;local v185;local v186;while true do if (v183==1) then v186=v90[v184] + v185 ;v90[v184]=v186;v183=2;end if (v183==0) then v184=v92[2];v185=v90[v184 + 2 ];v183=1;end if (v183==2) then if (v185>(0 -0)) then if (v186<=v90[v184 + 1 ]) then local v469=0;while true do if (0==v469) then v84=v92[3];v90[v184 + 3 ]=v186;break;end end end elseif (v186>=v90[v184 + 1 ]) then local v470=0;while true do if (v470==0) then v84=v92[3];v90[v184 + 3 + 0 ]=v186;break;end end end break;end end else local v187=v92[2];local v188=v90[v187];local v189=v90[v187 + 2 ];if (v189>0) then if (v188>v90[v187 + 1 ]) then v84=v92[3];else v90[v187 + 3 ]=v188;end elseif (v188<v90[v187 + 1 ]) then v84=v92[3];else v90[v187 + 3 ]=v188;end end elseif (v93<=16) then local v142=v92[2];v90[v142](v21(v90,v142 + 1 ,v85));elseif (v93>17) then if (v90[v92[2]]==v92[4]) then v84=v84 + 1 ;else v84=v92[11 -8 ];end else local v190=v92[2];v90[v190]=v90[v190](v21(v90,v190 + 1 ,v85));end elseif (v93<=21) then if (v93<=19) then for v169=v92[2],v92[3] do v90[v169]=nil;end elseif (v93>20) then local v192=v92[2];v90[v192]=v90[v192](v21(v90,v192 + 1 ,v85));else v90[v92[2]]= #v90[v92[3]];end elseif (v93<=(975 -(802 + 150))) then if (v93>(59 -37)) then local v195=v92[2];local v196=v92[4];local v197=v195 + 2 ;local v198={v90[v195](v90[v195 + 1 ],v90[v197])};for v336=1,v196 do v90[v197 + v336 ]=v198[v336];end local v199=v198[1 -0 ];if v199 then local v360=0;while true do if (v360==0) then v90[v197]=v199;v84=v92[3];break;end end else v84=v84 + 1 + 0 ;end else v90[v92[2]]=v90[v92[3]]%v92[4] ;end elseif (v93>24) then v90[v92[2]][v90[v92[3]]]=v92[4];else local v203=0;local v204;local v205;local v206;while true do if (0==v203) then v204=v92[2];v205={v90[v204](v90[v204 + 1 ])};v203=1;end if (v203==1) then v206=0;for v419=v204,v92[4] do local v420=0;while true do if (v420==0) then v206=v206 + (998 -(915 + 82)) ;v90[v419]=v205[v206];break;end end end break;end end end elseif (v93<=38) then if (v93<=31) then if (v93<=28) then if (v93<=26) then local v143=0;local v144;while true do if (v143==0) then v144=v92[2];v90[v144]=v90[v144]();break;end end elseif (v93>(76 -49)) then local v207=v92[2 + 0 ];local v208=v90[v92[3]];v90[v207 + 1 ]=v208;v90[v207]=v208[v92[4]];else local v212=v92[2];v90[v212]=v90[v212](v90[v212 + 1 ]);end elseif (v93<=(37 -8)) then local v145=v92[2];do return v21(v90,v145,v85);end elseif (v93==30) then v90[v92[2]]=v66[v92[3]];elseif (v90[v92[2]]==v92[4]) then v84=v84 + (1188 -(1069 + 118)) ;else v84=v92[3];end elseif (v93<=34) then if (v93<=32) then v90[v92[2]]=v92[3] + v90[v92[4]] ;elseif (v93==33) then v66[v92[3]]=v90[v92[2]];else v90[v92[2]][v92[3]]=v90[v92[4]];end elseif (v93<=36) then if (v93==35) then v90[v92[2]][v90[v92[3]]]=v90[v92[4]];else local v222=0;local v223;while true do if (v222==0) then v223=v92[2];do return v90[v223](v21(v90,v223 + 1 ,v92[3]));end break;end end end elseif (v93==37) then for v341=v92[2],v92[3] do v90[v341]=nil;end else local v224=0;local v225;while true do if (v224==0) then v225=v92[2];v90[v225]=v90[v225](v21(v90,v225 + 1 ,v92[3]));break;end end end elseif (v93<=45) then if (v93<=41) then if (v93<=39) then local v147=v92[4 -2 ];do return v21(v90,v147,v147 + v92[3] );end elseif (v93==40) then if  not v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end else local v226=0;local v227;while true do if (v226==0) then v227=v92[2];v90[v227](v21(v90,v227 + 1 ,v85));break;end end end elseif (v93<=43) then if (v93>42) then v90[v92[3 -1 ]]();else v90[v92[2]]=v90[v92[3]][v90[v92[4]]];end elseif (v93>44) then local v230=0;local v231;local v232;local v233;while true do if (v230==0) then v231=v92[2];v232={v90[v231](v90[v231 + 1 ])};v230=1;end if (v230==1) then v233=0;for v421=v231,v92[4] do local v422=0;while true do if (v422==0) then v233=v233 + 1 ;v90[v421]=v232[v233];break;end end end break;end end else local v234=0;local v235;local v236;local v237;local v238;while true do if (v234==1) then v85=(v237 + v235) -1 ;v238=0;v234=2;end if (v234==2) then for v423=v235,v85 do local v424=0;while true do if (0==v424) then v238=v238 + 1 ;v90[v423]=v236[v238];break;end end end break;end if (v234==0) then v235=v92[2];v236,v237=v83(v90[v235](v90[v235 + 1 ]));v234=1;end end end elseif (v93<=48) then if (v93<=46) then local v148=0;local v149;local v150;local v151;while true do if (v148==0) then v149=v92[2];v150={v90[v149](v21(v90,v149 + 1 ,v85))};v148=1;end if (v148==1) then v151=0;for v363=v149,v92[4] do local v364=0;while true do if (v364==0) then v151=v151 + 1 ;v90[v363]=v150[v151];break;end end end break;end end elseif (v93==47) then if v90[v92[1 + 1 ]] then v84=v84 + 1 ;else v84=v92[4 -1 ];end else v90[v92[2]]= not v90[v92[3]];end elseif (v93<=50) then if (v93==49) then v90[v92[2]][v90[v92[3]]]=v92[4];else local v242=0;local v243;local v244;local v245;while true do if (0==v242) then v243=v92[2];v244=v90[v243];v242=1;end if (v242==1) then v245=v90[v243 + 2 ];if (v245>0) then if (v244>v90[v243 + 1 + 0 ]) then v84=v92[3];else v90[v243 + (794 -(368 + 423)) ]=v244;end elseif (v244<v90[v243 + (3 -2) ]) then v84=v92[3];else v90[v243 + (21 -(10 + 8)) ]=v244;end break;end end end elseif (v93==51) then if v90[v92[2]] then v84=v84 + 1 ;else v84=v92[11 -8 ];end else local v246=0;local v247;while true do if (v246==0) then v247=v92[2];v90[v247](v90[v247 + 1 ]);break;end end end elseif (v93<=78) then if (v93<=(507 -(416 + 26))) then if (v93<=58) then if (v93<=55) then if (v93<=53) then v67[v92[3]]=v90[v92[2]];elseif (v93==54) then local v248=v92[2];local v249={};for v344=1, #v89 do local v345=v89[v344];for v367=0, #v345 do local v368=v345[v367];local v369=v368[1];local v370=v368[2];if ((v369==v90) and (v370>=v248)) then local v425=0;while true do if (v425==0) then v249[v370]=v369[v370];v368[1]=v249;break;end end end end end else v66[v92[3]]=v90[v92[2]];end elseif (v93<=(178 -122)) then local v154=0;local v155;local v156;while true do if (1==v154) then for v371=v155 + 1 ,v85 do v15(v156,v90[v371]);end break;end if (v154==0) then v155=v92[2];v156=v90[v155];v154=1;end end elseif (v93==57) then v90[v92[2]]=v90[v92[2 + 1 ]]%v92[4] ;elseif (v90[v92[2]]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=61) then if (v93<=(103 -44)) then if (v90[v92[2]]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[441 -(145 + 293) ];end elseif (v93>60) then local v254=0;local v255;local v256;local v257;local v258;while true do if (v254==0) then v255=v92[432 -(44 + 386) ];v256,v257=v83(v90[v255](v21(v90,v255 + 1 ,v92[3])));v254=1;end if (v254==2) then for v426=v255,v85 do local v427=0;while true do if (0==v427) then v258=v258 + 1 ;v90[v426]=v256[v258];break;end end end break;end if (v254==1) then v85=(v257 + v255) -1 ;v258=0;v254=2;end end else v90[v92[2]]=v90[v92[3]] + v92[4] ;end elseif (v93<=63) then if (v93==62) then local v260=0;local v261;local v262;local v263;local v264;while true do if (v260==1) then v85=(v263 + v261) -1 ;v264=0;v260=2;end if (2==v260) then for v428=v261,v85 do v264=v264 + 1 ;v90[v428]=v262[v264];end break;end if (v260==0) then v261=v92[2];v262,v263=v83(v90[v261](v21(v90,v261 + 1 ,v85)));v260=1;end end else local v265=v92[1488 -(998 + 488) ];v90[v265](v21(v90,v265 + 1 ,v92[3]));end elseif (v93>64) then v90[v92[2]]=v90[v92[3]]%v90[v92[4]] ;else do return;end end elseif (v93<=71) then if (v93<=68) then if (v93<=66) then v90[v92[2]]=v90[v92[3]][v90[v92[4]]];elseif (v93>(22 + 45)) then local v267=0;local v268;local v269;local v270;while true do if (v267==2) then for v431=1 + 0 ,v92[4] do local v432=0;local v433;while true do if (1==v432) then if (v433[1]==7) then v270[v431-1 ]={v90,v433[3]};else v270[v431-1 ]={v66,v433[12 -9 ]};end v89[ #v89 + 1 + 0 ]=v270;break;end if (v432==0) then v84=v84 + (773 -(201 + 571)) ;v433=v80[v84];v432=1;end end end v90[v92[2]]=v41(v268,v269,v67);break;end if (v267==1) then v270={};v269=v18({},{[v7("\53\231\85\11\234\15\192","\142\106\184\60\101")]=function(v434,v435)local v436=v270[v435];return v436[1][v436[2]];end,[v7("\29\73\178\52\149\117\161\38\115\164","\207\66\22\220\81\226\28")]=function(v437,v438,v439)local v440=0;local v441;while true do if (v440==0) then v441=v270[v438];v441[1][v441[2]]=v439;break;end end end});v267=2;end if (v267==0) then v268=v81[v92[3]];v269=nil;v267=1;end end else do return v90[v92[2]]();end end elseif (v93<=69) then v84=v92[3];elseif (v93==70) then local v271=0;local v272;while true do if (v271==0) then v272=v92[7 -5 ];v90[v272](v90[v272 + 1 ]);break;end end else local v273=0;local v274;local v275;local v276;while true do if (v273==0) then v274=v92[2];v275=v90[v274 + 2 ];v273=1;end if (v273==2) then if (v275>0) then if (v276<=v90[v274 + 1 ]) then local v490=0;while true do if (v490==0) then v84=v92[3];v90[v274 + 3 ]=v276;break;end end end elseif (v276>=v90[v274 + 1 ]) then v84=v92[3];v90[v274 + 3 ]=v276;end break;end if (v273==1) then v276=v90[v274] + v275 ;v90[v274]=v276;v273=2;end end end elseif (v93<=74) then if (v93<=72) then local v160=0;local v161;while true do if (v160==0) then v161=v92[2];v90[v161]=v90[v161](v90[v161 + 1 ]);break;end end elseif (v93>(259 -186)) then v90[v92[2]]=v90[v92[3]];else local v279=0;local v280;local v281;local v282;while true do if (v279==1) then v282={};v281=v18({},{[v7("\44\234\139\245\238\194\11","\167\115\181\226\155\138")]=function(v442,v443)local v444=0;local v445;while true do if (v444==0) then v445=v282[v443];return v445[1][v445[2]];end end end,[v7("\221\29\233\89\108\120\200\230\39\255","\166\130\66\135\60\27\17")]=function(v446,v447,v448)local v449=0;local v450;while true do if (v449==0) then v450=v282[v447];v450[860 -(814 + 45) ][v450[2]]=v448;break;end end end});v279=2;end if (v279==2) then for v451=1,v92[4] do local v452=0;local v453;while true do if (v452==1) then if (v453[1]==7) then v282[v451-1 ]={v90,v453[3]};else v282[v451-1 ]={v66,v453[3]};end v89[ #v89 + 1 ]=v282;break;end if (v452==0) then v84=v84 + 1 ;v453=v80[v84];v452=1;end end end v90[v92[2]]=v41(v280,v281,v67);break;end if (v279==0) then v280=v81[v92[3]];v281=nil;v279=1;end end end elseif (v93<=76) then if (v93>75) then v90[v92[2]]=v92[3];elseif (v90[v92[4 -2 ]]~=v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93==77) then v90[v92[2]]=v90[v92[3]][v92[4]];else local v287=0;local v288;while true do if (0==v287) then v288=v92[2];v90[v288]=v90[v288](v21(v90,v288 + 1 ,v92[3]));break;end end end elseif (v93<=91) then if (v93<=(5 + 79)) then if (v93<=81) then if (v93<=79) then v90[v92[1 + 1 ]]={};elseif (v93>80) then if ((v92[888 -(261 + 624) ]==v7("\123\111\224\67","\80\36\42\174\21")) or (v92[3]==v7("\73\21\35\124\75\30\33","\26\46\112\87"))) then v90[v92[2]]=v67;else v90[v92[2]]=v67[v92[3]];end else v90[v92[2]]=v66[v92[3]];end elseif (v93<=82) then if (v90[v92[2]]~=v90[v92[6 -2 ]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93==83) then local v292=0;local v293;local v294;local v295;local v296;while true do if (v292==0) then v293=v92[1082 -(1020 + 60) ];v294,v295=v83(v90[v293](v90[v293 + 1 ]));v292=1;end if (v292==1) then v85=(v295 + v293) -1 ;v296=0;v292=2;end if (v292==2) then for v454=v293,v85 do local v455=0;while true do if (v455==0) then v296=v296 + (1424 -(630 + 793)) ;v90[v454]=v294[v296];break;end end end break;end end else v90[v92[2]]=v90[v92[3]] + v92[4] ;end elseif (v93<=87) then if (v93<=85) then local v163=v92[2];local v164=v90[v163];for v171=v163 + 1 ,v85 do v15(v164,v90[v171]);end elseif (v93>86) then do return v90[v92[2]]();end else v90[v92[2]]=v92[3]~=0 ;end elseif (v93<=(301 -212)) then if (v93>88) then local v299=v92[2];local v300=v92[4];local v301=v299 + 2 ;local v302={v90[v299](v90[v299 + 1 ],v90[v301])};for v350=1,v300 do v90[v301 + v350 ]=v302[v350];end local v303=v302[1];if v303 then v90[v301]=v303;v84=v92[14 -11 ];else v84=v84 + 1 ;end else local v304=v92[2];do return v90[v304](v21(v90,v304 + 1 ,v92[2 + 1 ]));end end elseif (v93>90) then local v305=v92[2];local v306,v307=v83(v90[v305](v21(v90,v305 + 1 ,v85)));v85=(v307 + v305) -1 ;local v308=0;for v353=v305,v85 do v308=v308 + 1 ;v90[v353]=v306[v308];end else v90[v92[2]][v92[9 -6 ]]=v90[v92[1751 -(760 + 987) ]];end elseif (v93<=98) then if (v93<=94) then if (v93<=92) then v90[v92[2]]={};elseif (v93==93) then v90[v92[2]][v92[3]]=v92[4];else v90[v92[1915 -(1789 + 124) ]]=v92[3]~=0 ;end elseif (v93<=96) then if (v93>95) then local v314=0;local v315;local v316;while true do if (v314==0) then v315=v92[2];v316={};v314=1;end if (v314==1) then for v456=1, #v89 do local v457=0;local v458;while true do if (v457==0) then v458=v89[v456];for v501=0, #v458 do local v502=v458[v501];local v503=v502[1];local v504=v502[768 -(745 + 21) ];if ((v503==v90) and (v504>=v315)) then local v515=0;while true do if (v515==0) then v316[v504]=v503[v504];v502[1 + 0 ]=v316;break;end end end end break;end end end break;end end else v90[v92[2]]= not v90[v92[7 -4 ]];end elseif (v93==97) then do return v90[v92[2]];end else local v318=0;local v319;local v320;local v321;while true do if (v318==1) then v321=0 -0 ;for v459=v319,v92[4] do v321=v321 + 1 ;v90[v459]=v320[v321];end break;end if (v318==0) then v319=v92[2];v320={v90[v319](v21(v90,v319 + 1 ,v85))};v318=1;end end end elseif (v93<=101) then if (v93<=99) then local v166=v92[2];v90[v166]=v90[v166]();elseif (v93>100) then if ((v92[3]==v7("\134\6\133\66","\212\217\67\203\20\223\223\37")) or (v92[3]==v7("\189\136\188\212\191\131\190","\178\218\237\200"))) then v90[v92[2]]=v67;else v90[v92[2]]=v67[v92[1 + 2 ]];end else local v322=v92[2];local v323=v90[v92[3]];v90[v322 + 1 ]=v323;v90[v322]=v323[v92[4]];end elseif (v93<=103) then if (v93>102) then v90[v92[2]][v90[v92[3]]]=v90[v92[4]];else local v329=0;local v330;local v331;local v332;local v333;while true do if (v329==2) then for v462=v330,v85 do v333=v333 + 1 ;v90[v462]=v331[v333];end break;end if (v329==1) then v85=(v332 + v330) -1 ;v333=1055 -(87 + 968) ;v329=2;end if (v329==0) then v330=v92[2 + 0 ];v331,v332=v83(v90[v330](v21(v90,v330 + 1 ,v92[3])));v329=1;end end end elseif (v93>104) then if  not v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end else v67[v92[3]]=v90[v92[8 -6 ]];end v84=v84 + 1 + 0 ;break;end end end end;end return v41(v40(),{},v28)(...);end if (v29==4) then v39=nil;function v39(...)return {...},v20("#",...);end v40=nil;function v40()local v71=0;local v72;local v73;local v74;local v75;local v76;local v77;while true do if (2==v71) then for v107=1,v35() do local v108=v33();if (v32(v108,1,1)==0) then local v117=0;local v118;local v119;local v120;while true do if (v117==1) then v120={v34(),v34(),nil,nil};if (v118==0) then local v126=0;while true do if (v126==0) then v120[3]=v34();v120[4]=v34();break;end end elseif (v118==1) then v120[3]=v35();elseif (v118==2) then v120[3]=v35() -(2^16) ;elseif (v118==3) then local v168=0;while true do if (v168==0) then v120[3]=v35() -(2^16) ;v120[4]=v34();break;end end end v117=2;end if (v117==2) then if (v32(v119,1,1 -0 )==1) then v120[2]=v77[v120[2]];end if (v32(v119,2,2)==(1066 -(68 + 997))) then v120[3]=v77[v120[1273 -(226 + 1044) ]];end v117=3;end if (3==v117) then if (v32(v119,3,3)==1) then v120[4]=v77[v120[4]];end v72[v107]=v120;break;end if (v117==0) then v118=v32(v108,2 + 0 ,3);v119=v32(v108,4,6);v117=1;end end end end for v109=4 -3 ,v35() do v73[v109-1 ]=v40();end return v75;end if (1==v71) then v76=v35();v77={};for v111=1,v76 do local v112=0;local v113;local v114;while true do if (v112==0) then v113=v33();v114=nil;v112=1;end if (v112==1) then if (v113==(1638 -(1523 + 114))) then v114=v33()~=0 ;elseif (v113==2) then v114=v36();elseif (v113==3) then v114=v37();end v77[v111]=v114;break;end end end v75[3]=v33();v71=2;end if (v71==0) then v72={};v73={};v74={};v75={v72,v73,nil,v74};v71=1;end end end v29=5;end end end vv17(),...);